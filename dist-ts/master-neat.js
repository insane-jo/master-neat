/*! For license information please see master-neat.js.LICENSE.txt */
(()=>{var t={975:t=>{"use strict";function e(t){if("string"!=typeof t)throw new TypeError("Path must be a string. Received "+JSON.stringify(t))}function n(t,e){for(var n,o="",i=0,s=-1,r=0,a=0;a<=t.length;++a){if(a<t.length)n=t.charCodeAt(a);else{if(47===n)break;n=47}if(47===n){if(s===a-1||1===r);else if(s!==a-1&&2===r){if(o.length<2||2!==i||46!==o.charCodeAt(o.length-1)||46!==o.charCodeAt(o.length-2))if(o.length>2){var h=o.lastIndexOf("/");if(h!==o.length-1){-1===h?(o="",i=0):i=(o=o.slice(0,h)).length-1-o.lastIndexOf("/"),s=a,r=0;continue}}else if(2===o.length||1===o.length){o="",i=0,s=a,r=0;continue}e&&(o.length>0?o+="/..":o="..",i=2)}else o.length>0?o+="/"+t.slice(s+1,a):o=t.slice(s+1,a),i=a-s-1;s=a,r=0}else 46===n&&-1!==r?++r:r=-1}return o}var o={resolve:function(){for(var t,o="",i=!1,s=arguments.length-1;s>=-1&&!i;s--){var r;s>=0?r=arguments[s]:(void 0===t&&(t=process.cwd()),r=t),e(r),0!==r.length&&(o=r+"/"+o,i=47===r.charCodeAt(0))}return o=n(o,!i),i?o.length>0?"/"+o:"/":o.length>0?o:"."},normalize:function(t){if(e(t),0===t.length)return".";var o=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=n(t,!o)).length||o||(t="."),t.length>0&&i&&(t+="/"),o?"/"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return".";for(var t,n=0;n<arguments.length;++n){var i=arguments[n];e(i),i.length>0&&(void 0===t?t=i:t+="/"+i)}return void 0===t?".":o.normalize(t)},relative:function(t,n){if(e(t),e(n),t===n)return"";if((t=o.resolve(t))===(n=o.resolve(n)))return"";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var s=t.length,r=s-i,a=1;a<n.length&&47===n.charCodeAt(a);++a);for(var h=n.length-a,c=r<h?r:h,u=-1,l=0;l<=c;++l){if(l===c){if(h>c){if(47===n.charCodeAt(a+l))return n.slice(a+l+1);if(0===l)return n.slice(a+l)}else r>c&&(47===t.charCodeAt(i+l)?u=l:0===l&&(u=0));break}var f=t.charCodeAt(i+l);if(f!==n.charCodeAt(a+l))break;47===f&&(u=l)}var d="";for(l=i+u+1;l<=s;++l)l!==s&&47!==t.charCodeAt(l)||(0===d.length?d+="..":d+="/..");return d.length>0?d+n.slice(a+u):(a+=u,47===n.charCodeAt(a)&&++a,n.slice(a))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return".";for(var n=t.charCodeAt(0),o=47===n,i=-1,s=!0,r=t.length-1;r>=1;--r)if(47===(n=t.charCodeAt(r))){if(!s){i=r;break}}else s=!1;return-1===i?o?"/":".":o&&1===i?"//":t.slice(0,i)},basename:function(t,n){if(void 0!==n&&"string"!=typeof n)throw new TypeError('"ext" argument must be a string');e(t);var o,i=0,s=-1,r=!0;if(void 0!==n&&n.length>0&&n.length<=t.length){if(n.length===t.length&&n===t)return"";var a=n.length-1,h=-1;for(o=t.length-1;o>=0;--o){var c=t.charCodeAt(o);if(47===c){if(!r){i=o+1;break}}else-1===h&&(r=!1,h=o+1),a>=0&&(c===n.charCodeAt(a)?-1==--a&&(s=o):(a=-1,s=h))}return i===s?s=h:-1===s&&(s=t.length),t.slice(i,s)}for(o=t.length-1;o>=0;--o)if(47===t.charCodeAt(o)){if(!r){i=o+1;break}}else-1===s&&(r=!1,s=o+1);return-1===s?"":t.slice(i,s)},extname:function(t){e(t);for(var n=-1,o=0,i=-1,s=!0,r=0,a=t.length-1;a>=0;--a){var h=t.charCodeAt(a);if(47!==h)-1===i&&(s=!1,i=a+1),46===h?-1===n?n=a:1!==r&&(r=1):-1!==n&&(r=-1);else if(!s){o=a+1;break}}return-1===n||-1===i||0===r||1===r&&n===i-1&&n===o+1?"":t.slice(n,i)},format:function(t){if(null===t||"object"!=typeof t)throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof t);return function(t,e){var n=e.dir||e.root,o=e.base||(e.name||"")+(e.ext||"");return n?n===e.root?n+o:n+"/"+o:o}(0,t)},parse:function(t){e(t);var n={root:"",dir:"",base:"",ext:"",name:""};if(0===t.length)return n;var o,i=t.charCodeAt(0),s=47===i;s?(n.root="/",o=1):o=0;for(var r=-1,a=0,h=-1,c=!0,u=t.length-1,l=0;u>=o;--u)if(47!==(i=t.charCodeAt(u)))-1===h&&(c=!1,h=u+1),46===i?-1===r?r=u:1!==l&&(l=1):-1!==r&&(l=-1);else if(!c){a=u+1;break}return-1===r||-1===h||0===l||1===l&&r===h-1&&r===a+1?-1!==h&&(n.base=n.name=0===a&&s?t.slice(1,h):t.slice(a,h)):(0===a&&s?(n.name=t.slice(1,r),n.base=t.slice(1,h)):(n.name=t.slice(a,r),n.base=t.slice(a,h)),n.ext=t.slice(r,h)),a>0?n.dir=t.slice(0,a-1):s&&(n.dir="/"),n},sep:"/",delimiter:":",win32:null,posix:null};o.posix=o,t.exports=o},351:function(t,e,n){"use strict";var o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const i=o(n(621)),s=o(n(398)),r=o(n(369)),a=o(n(583)),h=o(n(814));var c={Construct:function(t){var e,n=new s.default(0,0),o=[];for(e=0;e<t.length;e++){let n;if(t[e]instanceof a.default)for(n=0;n<t[e].nodes.length;n++)o.push(t[e].nodes[n]);else if(t[e]instanceof r.default)for(n=0;n<t[e].nodes.length;n++)for(var i=0;i<t[e].nodes[n].nodes.length;i++)o.push(t[e].nodes[n].nodes[i]);else t[e]instanceof h.default&&o.push(t[e])}var c=[],u=[];for(e=o.length-1;e>=0;e--)"output"===o[e].type||o[e].connections.out.length+o[e].connections.gated.length===0?(o[e].type="output",n.output++,u.push(o[e]),o.splice(e,1)):"input"!==o[e].type&&o[e].connections.in.length||(o[e].type="input",n.input++,c.push(o[e]),o.splice(e,1));if(o=c.concat(o).concat(u),0===n.input||0===n.output)throw new Error("Given nodes have no clear input/output node!");for(e=0;e<o.length;e++){let t;for(t=0;t<o[e].connections.out.length;t++)n.connections.push(o[e].connections.out[t]);for(t=0;t<o[e].connections.gated.length;t++)n.gates.push(o[e].connections.gated[t]);0!==o[e].connections.self.weight&&n.selfconns.push(o[e].connections.self)}return n.nodes=o,n},Perceptron:function(){var t=Array.prototype.slice.call(arguments);if(t.length<3)throw new Error("You have to specify at least 3 layers");var e=[];e.push(new a.default(t[0]));for(var n=1;n<t.length;n++){var o=t[n];o=new a.default(o),e.push(o),e[n-1].connect(e[n],i.default.connection.ALL_TO_ALL)}return c.Construct(e)},Random:function(t,e,n,o){var r,a=(o=o||{}).connections||2*e,h=o.backconnections||0,c=o.selfconnections||0,u=o.gates||0,l=new s.default(t,n);for(r=0;r<e;r++)l.mutate(i.default.mutation.ADD_NODE);for(r=0;r<a-e;r++)l.mutate(i.default.mutation.ADD_CONN);for(r=0;r<h;r++)l.mutate(i.default.mutation.ADD_BACK_CONN);for(r=0;r<c;r++)l.mutate(i.default.mutation.ADD_SELF_CONN);for(r=0;r<u;r++)l.mutate(i.default.mutation.ADD_GATE);return l},LSTM:function(){var t=Array.prototype.slice.call(arguments);if(t.length<3)throw new Error("You have to specify at least 3 layers");var e,n=t.pop();"number"==typeof n?(e=new a.default(n),n={}):e=new a.default(t.pop()),e.set({type:"output"});var o=n.memoryToMemory||!1,s=n.outputToMemory||!1,r=n.outputToGates||!1,h=void 0===n.inputToOutput||n.inputToOutput,u=void 0===n.inputToDeep||n.inputToDeep,l=new a.default(t.shift());l.set({type:"input"});var f=t,d=[];d.push(l);for(var p=l,g=0;g<f.length;g++){var v=f[g],m=new a.default(v),_=new a.default(v),w=new a.default(v),O=new a.default(v),A=g===f.length-1?e:new a.default(v);m.set({bias:1}),_.set({bias:1}),O.set({bias:1});var N=p.connect(w,i.default.connection.ALL_TO_ALL);p.connect(m,i.default.connection.ALL_TO_ALL),p.connect(O,i.default.connection.ALL_TO_ALL),p.connect(_,i.default.connection.ALL_TO_ALL),w.connect(m,i.default.connection.ALL_TO_ALL),w.connect(_,i.default.connection.ALL_TO_ALL),w.connect(O,i.default.connection.ALL_TO_ALL);var T=w.connect(w,i.default.connection.ONE_TO_ONE),L=w.connect(A,i.default.connection.ALL_TO_ALL);if(m.gate(N,i.default.gating.INPUT),_.gate(T,i.default.gating.SELF),O.gate(L,i.default.gating.OUTPUT),u&&g>0){let t=l.connect(w,i.default.connection.ALL_TO_ALL);m.gate(t,i.default.gating.INPUT)}if(o){let t=w.connect(w,i.default.connection.ALL_TO_ELSE);m.gate(t,i.default.gating.INPUT)}if(s){let t=e.connect(w,i.default.connection.ALL_TO_ALL);m.gate(t,i.default.gating.INPUT)}r&&(e.connect(m,i.default.connection.ALL_TO_ALL),e.connect(_,i.default.connection.ALL_TO_ALL),e.connect(O,i.default.connection.ALL_TO_ALL)),d.push(m),d.push(_),d.push(w),d.push(O),g!==f.length-1&&d.push(A),p=A}return h&&l.connect(e,i.default.connection.ALL_TO_ALL),d.push(e),c.Construct(d)},GRU:function(){var t=Array.prototype.slice.call(arguments);if(t.length<3)throw new Error("not enough layers (minimum 3) !!");var e=new a.default(t.shift()),n=new a.default(t.pop()),o=t,i=[];i.push(e);for(var s=e,h=0;h<o.length;h++){var u=r.default.GRU(o[h]);s.connect(u),s=u,i.push(u)}return s.connect(n),i.push(n),c.Construct(i)},Hopfield:function(t){var e=new a.default(t),n=new a.default(t);return e.connect(n,i.default.connection.ALL_TO_ALL),e.set({type:"input"}),n.set({squash:i.default.activation.STEP,type:"output"}),c.Construct([e,n])},NARX:function(t,e,n,o,s){Array.isArray(e)||(e=[e]);var a=[],u=r.default.Dense(t),l=r.default.Memory(t,o),f=[],d=r.default.Dense(n),p=r.default.Memory(n,s);a.push(u),a.push(p);for(var g=0;g<e.length;g++){var v=r.default.Dense(e[g]);f.push(v),a.push(v),void 0!==f[g-1]&&f[g-1].connect(v,i.default.connection.ALL_TO_ALL)}return a.push(l),a.push(d),u.connect(f[0],i.default.connection.ALL_TO_ALL),u.connect(l,i.default.connection.ONE_TO_ONE,1),l.connect(f[0],i.default.connection.ALL_TO_ALL),f[f.length-1].connect(d,i.default.connection.ALL_TO_ALL),d.connect(p,i.default.connection.ONE_TO_ONE,1),p.connect(f[0],i.default.connection.ALL_TO_ALL),u.set(new h.default("input")),d.set(new h.default("output")),c.Construct(a)}};e.default=c},502:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{constructor(t,e,n){this.gain=1,this.elegibility=0,this.previousDeltaWeight=0,this.totalDeltaWeight=0,this.gater=null,this.xtrace={nodes:[],values:[]},this.from=t,this.to=e,this.weight=void 0===n?.2*Math.random()-.1:n}toJSON(){return{weight:this.weight}}static innovationID(t,e){return.5*(t+e)*(t+e+1)+e}}},583:function(t,e,n){"use strict";var o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const i=o(n(814)),s=o(n(621)),r=o(n(369));var a=n(982);class h{constructor(t){this.nodes=[],this.connections={in:[],out:[],self:[]};for(var e=0;e<t;e++)this.nodes.push(new i.default)}activate(t){const e=[];if(void 0!==t&&t.length!==this.nodes.length)throw new Error("Array with values should be same as the amount of nodes!");for(let n=0;n<this.nodes.length;n++){let o;o=void 0===t?this.nodes[n].activate():this.nodes[n].activate(t[n]),e.push(o)}return e}propagate(t,e,n){if(void 0!==n&&n.length!==this.nodes.length)throw new Error("Array with values should be same as the amount of nodes!");for(var o=this.nodes.length-1;o>=0;o--)void 0===n?this.nodes[o].propagate(t,e,!0):this.nodes[o].propagate(t,e,!0,n[o])}connect(t,e,n){var o,c,u=[];if(t instanceof h){if(void 0===e&&(this!==t?(a.warnings&&console.warn("No group connection specified, using ALL_TO_ALL"),e=s.default.connection.ALL_TO_ALL):(a.warnings&&console.warn("No group connection specified, using ONE_TO_ONE"),e=s.default.connection.ONE_TO_ONE)),e===s.default.connection.ALL_TO_ALL||e===s.default.connection.ALL_TO_ELSE)for(o=0;o<this.nodes.length;o++)for(c=0;c<t.nodes.length;c++){if(e===s.default.connection.ALL_TO_ELSE&&this.nodes[o]===t.nodes[c])continue;let i=this.nodes[o].connect(t.nodes[c],n);this.connections.out.push(i[0]),t.connections.in.push(i[0]),u.push(i[0])}else if(e===s.default.connection.ONE_TO_ONE){if(this.nodes.length!==t.nodes.length)throw new Error("From and To group must be the same size!");for(o=0;o<this.nodes.length;o++){let e=this.nodes[o].connect(t.nodes[o],n);this.connections.self.push(e[0]),u.push(e[0])}}}else if(t instanceof r.default)u=t.input(this,e,n);else if(t instanceof i.default)for(o=0;o<this.nodes.length;o++){let e=this.nodes[o].connect(t,n);this.connections.out.push(e[0]),u.push(e[0])}return u}gate(t,e){if(void 0===e)throw new Error("Please specify Gating.INPUT, Gating.OUTPUT");Array.isArray(t)||(t=[t]);const n=[],o=[];var i,r;for(i=0;i<t.length;i++){var a=t[i];n.includes(a.from)||n.push(a.from),o.includes(a.to)||o.push(a.to)}switch(e){case s.default.gating.INPUT:for(i=0;i<o.length;i++){let e=o[i],n=this.nodes[i%this.nodes.length];for(r=0;r<e.connections.in.length;r++){let o=e.connections.in[r];t.includes(o)&&n.gate(o)}}break;case s.default.gating.OUTPUT:for(i=0;i<n.length;i++){let e=n[i],o=this.nodes[i%this.nodes.length];for(r=0;r<e.connections.out.length;r++){let n=e.connections.out[r];t.includes(n)&&o.gate(n)}}break;case s.default.gating.SELF:for(i=0;i<n.length;i++){let e=n[i],o=this.nodes[i%this.nodes.length];t.includes(e.connections.self)&&o.gate(e.connections.self)}}}set(t){for(var e=0;e<this.nodes.length;e++)void 0!==t.bias&&(this.nodes[e].bias=t.bias),this.nodes[e].squash=t.squash||this.nodes[e].squash,this.nodes[e].type=t.type||this.nodes[e].type}disconnect(t,e=!1){var n,o,s;if(t instanceof h)for(n=0;n<this.nodes.length;n++)for(o=0;o<t.nodes.length;o++){for(this.nodes[n].disconnect(t.nodes[o],e),s=this.connections.out.length-1;s>=0;s--){let e=this.connections.out[s];if(e.from===this.nodes[n]&&e.to===t.nodes[o]){this.connections.out.splice(s,1);break}}if(e)for(s=this.connections.in.length-1;s>=0;s--){let e=this.connections.in[s];if(e.from===t.nodes[o]&&e.to===this.nodes[n]){this.connections.in.splice(s,1);break}}}else if(t instanceof i.default)for(n=0;n<this.nodes.length;n++){for(this.nodes[n].disconnect(t,e),o=this.connections.out.length-1;o>=0;o--){let e=this.connections.out[o];if(e.from===this.nodes[n]&&e.to===t){this.connections.out.splice(o,1);break}}if(e)for(o=this.connections.in.length-1;o>=0;o--){var r=this.connections.in[o];if(r.from===t&&r.to===this.nodes[n]){this.connections.in.splice(o,1);break}}}}clear(){for(var t=0;t<this.nodes.length;t++)this.nodes[t].clear()}}e.default=h},369:function(t,e,n){"use strict";var o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const i=o(n(583)),s=o(n(814));var r=n(621);class a{constructor(){this.output=null,this.nodes=[],this.connections={in:[],out:[],self:[]},this.input=()=>{}}activate(t){var e=[];if(void 0!==t&&t.length!==this.nodes.length)throw new Error("Array with values should be same as the amount of nodes!");for(var n=0;n<this.nodes.length;n++){var o;o=void 0===t?this.nodes[n].activate():this.nodes[n].activate(t[n]),e.push(o)}return e}propagate(t,e,n){if(void 0!==n&&n.length!==this.nodes.length)throw new Error("Array with values should be same as the amount of nodes!");for(var o=this.nodes.length-1;o>=0;o--)void 0===n?this.nodes[o].propagate(t,e,!0):this.nodes[o].propagate(t,e,!0,n[o])}connect(t,e,n){var o;if(t instanceof i.default||t instanceof s.default)o=this.output.connect(t,e,n);else{if(!(t instanceof a))return[];o=t.input(this,e,n)}return o}gate(t,e){this.output.gate(t,e)}set(t){for(var e=0;e<this.nodes.length;e++){var n=this.nodes[e];n instanceof s.default?(void 0!==t.bias&&(n.bias=t.bias),n.squash=t.squash||n.squash,n.type=t.type||n.type):n instanceof i.default&&n.set(t)}}disconnect(t,e=!1){var n,o,r;if(t instanceof i.default)for(n=0;n<this.nodes.length;n++)for(o=0;o<t.nodes.length;o++){for(this.nodes[n].disconnect(t.nodes[o],e),r=this.connections.out.length-1;r>=0;r--){let e=this.connections.out[r];if(e.from===this.nodes[n]&&e.to===t.nodes[o]){this.connections.out.splice(r,1);break}}if(e)for(r=this.connections.in.length-1;r>=0;r--){let e=this.connections.in[r];if(e.from===t.nodes[o]&&e.to===this.nodes[n]){this.connections.in.splice(r,1);break}}}else if(t instanceof s.default)for(n=0;n<this.nodes.length;n++){for(this.nodes[n].disconnect(t,e),o=this.connections.out.length-1;o>=0;o--){let e=this.connections.out[o];if(e.from===this.nodes[n]&&e.to===t){this.connections.out.splice(o,1);break}}if(e)for(r=this.connections.in.length-1;r>=0;r--){let e=this.connections.in[r];if(e.from===t&&e.to===this.nodes[n]){this.connections.in.splice(r,1);break}}}}clear(){for(var t=0;t<this.nodes.length;t++)this.nodes[t].clear()}static Dense(t){var e=new a,n=new i.default(t);return e.nodes.push(n),e.output=n,e.input=function(t,e,o){let i;return i=t instanceof a?t.output:t,e=e||r.connection.ALL_TO_ALL,t.connect(n,e,o)},e}static LSTM(t){var e=new a,n=new i.default(t),o=new i.default(t),s=new i.default(t),h=new i.default(t),c=new i.default(t);n.set({bias:1}),o.set({bias:1}),h.set({bias:1}),s.connect(n,r.connection.ALL_TO_ALL),s.connect(o,r.connection.ALL_TO_ALL),s.connect(h,r.connection.ALL_TO_ALL);var u=s.connect(s,r.connection.ONE_TO_ONE),l=s.connect(c,r.connection.ALL_TO_ALL);return o.gate(u,r.gating.SELF),h.gate(l,r.gating.OUTPUT),e.nodes=[n,o,s,h,c],e.output=c,e.input=function(t,e,i){let c;c=t instanceof a?t.output:t,e=e||r.connection.ALL_TO_ALL;var u=[],l=t.connect(s,e,i);return u=(u=(u=(u=u.concat(l)).concat(t.connect(n,e,i))).concat(t.connect(h,e,i))).concat(t.connect(o,e,i)),n.gate(l,r.gating.INPUT),u},e}static GRU(t){var e=new a,n=new i.default(t),o=new i.default(t),s=new i.default(t),h=new i.default(t),c=new i.default(t),u=new i.default(t);u.set({bias:0,squash:r.activation.IDENTITY,type:"constant"}),h.set({squash:r.activation.TANH}),o.set({bias:0,squash:r.activation.INVERSE,type:"constant"}),n.set({bias:1}),s.set({bias:0}),u.connect(n,r.connection.ALL_TO_ALL),n.connect(o,r.connection.ONE_TO_ONE,1),u.connect(s,r.connection.ALL_TO_ALL);var l=u.connect(h,r.connection.ALL_TO_ALL);s.gate(l,r.gating.OUTPUT);var f=u.connect(c,r.connection.ALL_TO_ALL),d=h.connect(c,r.connection.ALL_TO_ALL);return n.gate(f,r.gating.OUTPUT),o.gate(d,r.gating.OUTPUT),c.connect(u,r.connection.ONE_TO_ONE,1),e.nodes=[n,o,s,h,c,u],e.output=c,e.input=function(t,e,o){t instanceof a&&(t=t.output),e=e||r.connection.ALL_TO_ALL;var i=[];return(i=(i=i.concat(t.connect(n,e,o))).concat(t.connect(s,e,o))).concat(t.connect(h,e,o))},e}static Memory(t,e){var n,o=new a,s=null;for(n=0;n<e;n++){var h=new i.default(t);h.set({squash:r.activation.IDENTITY,bias:0,type:"constant"}),null!=s&&s.connect(h,r.connection.ONE_TO_ONE,1),o.nodes.push(h),s=h}for(o.nodes.reverse(),n=0;n<o.nodes.length;n++)o.nodes[n].nodes.reverse();var c=new i.default(0);for(var u in o.nodes)c.nodes=c.nodes.concat(o.nodes[u].nodes);return o.output=c,o.input=function(t,e,n){if(t instanceof a&&(t=t.output),e=e||r.connection.ALL_TO_ALL,t.nodes.length!==o.nodes[o.nodes.length-1].nodes.length)throw new Error("Previous layer size must be same as memory size");return t.connect(o.nodes[o.nodes.length-1],r.connection.ONE_TO_ONE,1)},o}}e.default=a},398:function(t,e,n){"use strict";var o=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(i,s){function r(t){try{h(o.next(t))}catch(t){s(t)}}function a(t){try{h(o.throw(t))}catch(t){s(t)}}function h(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,a)}h((o=o.apply(t,e||[])).next())}))},i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const s=i(n(502)),r=i(n(814));var a=n(269);const h=i(n(621));var c=n(982),u=n(256),l=h.default.mutation;class f{constructor(t,e){if(void 0===t||void 0===e)throw new Error("No input or output size given");this.input=t,this.output=e,this.nodes=[],this.connections=[],this.gates=[],this.selfconns=[],this.dropout=0;for(let t=0;t<this.input+this.output;t++){var n=t<this.input?"input":"output";this.nodes.push(new r.default(n))}for(let t=0;t<this.input;t++)for(var o=this.input;o<this.output+this.input;o++){var i=Math.random()*this.input*Math.sqrt(2/this.input);this.connect(this.nodes[t],this.nodes[o],i)}}activate(t,e){for(var n=[],o=0;o<this.nodes.length;o++)if("input"===this.nodes[o].type)this.nodes[o].activate(t[o]);else if("output"===this.nodes[o].type){var i=this.nodes[o].activate();n.push(i)}else e&&(this.nodes[o].mask=Math.random()<this.dropout?0:1),this.nodes[o].activate();return n}noTraceActivate(t){for(var e=[],n=0;n<this.nodes.length;n++)if("input"===this.nodes[n].type)this.nodes[n].noTraceActivate(t[n]);else if("output"===this.nodes[n].type){var o=this.nodes[n].noTraceActivate();e.push(o)}else this.nodes[n].noTraceActivate();return e}propagate(t,e,n,o){if(void 0===o||o.length!==this.output)throw new Error("Output target length should match network output length");var i,s=o.length;for(i=this.nodes.length-1;i>=this.nodes.length-this.output;i--)this.nodes[i].propagate(t,e,n,o[--s]);for(i=this.nodes.length-this.output-1;i>=this.input;i--)this.nodes[i].propagate(t,e,n)}clear(){for(var t=0;t<this.nodes.length;t++)this.nodes[t].clear()}connect(t,e,n){const o=t.connect(e,n);for(let n=0;n<o.length;n++){const i=o[n];t!==e?this.connections.push(i):this.selfconns.push(i)}return o}disconnect(t,e){for(var n=t===e?this.selfconns:this.connections,o=0;o<n.length;o++){var i=n[o];if(i.from===t&&i.to===e){null!==i.gater&&this.ungate(i),n.splice(o,1);break}}t.disconnect(e)}gate(t,e){if(-1===this.nodes.indexOf(t))throw new Error("This node is not part of the network!");null==e.gater?(t.gate(e),this.gates.push(e)):c.warnings&&console.warn("This connection is already gated!")}ungate(t){var e,n=this.gates.indexOf(t);if(-1===n)throw new Error("This connection is not gated!");this.gates.splice(n,1),null===(e=t.gater)||void 0===e||e.ungate(t)}remove(t){var e=this.nodes.indexOf(t);if(-1===e)throw new Error("This node does not exist in the network!");var n=[];this.disconnect(t,t);for(var o=[],i=t.connections.in.length-1;i>=0;i--){let e=t.connections.in[i];l.SUB_NODE.keep_gates&&null!==e.gater&&e.gater!==t&&n.push(e.gater),o.push(e.from),this.disconnect(e.from,t)}var s=[];for(i=t.connections.out.length-1;i>=0;i--){let e=t.connections.out[i];l.SUB_NODE.keep_gates&&null!==e.gater&&e.gater!==t&&n.push(e.gater),s.push(e.to),this.disconnect(t,e.to)}var r=[];for(i=0;i<o.length;i++){let t=o[i];for(var a=0;a<s.length;a++){let e=s[a];if(!t.isProjectingTo(e)){var h=this.connect(t,e);r.push(h[0])}}}for(i=0;i<n.length&&0!==r.length;i++){let t=n[i],e=Math.floor(Math.random()*r.length);this.gate(t,r[e]),r.splice(e,1)}for(i=t.connections.gated.length-1;i>=0;i--){let e=t.connections.gated[i];this.ungate(e)}this.disconnect(t,t),this.nodes.splice(e,1)}mutate(t){if(void 0===t)throw new Error("No (correct) mutate method given!");var e,n;switch(t){case l.ADD_NODE:var o=(m=this.connections[Math.floor(Math.random()*this.connections.length)]).gater;this.disconnect(m.from,m.to);var i=this.nodes.indexOf(m.to),s=new r.default("hidden");s.mutate(l.MOD_ACTIVATION);var a=Math.min(i,this.nodes.length-this.output);this.nodes.splice(a,0,s);var h=this.connect(m.from,s)[0],u=this.connect(s,m.to)[0];null!=o&&this.gate(o,Math.random()>=.5?h:u);break;case l.SUB_NODE:if(this.nodes.length===this.input+this.output){c.warnings&&console.warn("No more nodes left to remove!");break}var f=Math.floor(Math.random()*(this.nodes.length-this.output-this.input)+this.input);this.remove(this.nodes[f]);break;case l.ADD_CONN:var d=[];for(e=0;e<this.nodes.length-this.output;e++){let t=this.nodes[e];for(n=Math.max(e+1,this.input);n<this.nodes.length;n++){let e=this.nodes[n];t.isProjectingTo(e)||d.push([t,e])}}if(0===d.length){c.warnings&&console.warn("No more connections to be made!");break}var p=d[Math.floor(Math.random()*d.length)];this.connect(p[0],p[1]);break;case l.SUB_CONN:var g=[];for(e=0;e<this.connections.length;e++){let t=this.connections[e];t.from.connections.out.length>1&&t.to.connections.in.length>1&&this.nodes.indexOf(t.to)>this.nodes.indexOf(t.from)&&g.push(t)}if(0===g.length){c.warnings&&console.warn("No connections to remove!");break}var v=g[Math.floor(Math.random()*g.length)];this.disconnect(v.from,v.to);break;case l.MOD_WEIGHT:var m=(O=this.connections.concat(this.selfconns))[Math.floor(Math.random()*O.length)],_=Math.random()*(t.max-t.min)+t.min;m.weight+=_;break;case l.MOD_BIAS:f=Math.floor(Math.random()*(this.nodes.length-this.input)+this.input),this.nodes[f].mutate(t);break;case l.MOD_ACTIVATION:if(!t.mutateOutput&&this.input+this.output===this.nodes.length){c.warnings&&console.warn("No nodes that allow mutation of activation function");break}f=Math.floor(Math.random()*(this.nodes.length-(t.mutateOutput?0:this.output)-this.input)+this.input),this.nodes[f].mutate(t);break;case l.ADD_SELF_CONN:{for(g=[],e=this.input;e<this.nodes.length;e++){let t=this.nodes[e];0===t.connections.self.weight&&g.push(t)}if(0===g.length){c.warnings&&console.warn("No more self-connections to add!");break}const t=g[Math.floor(Math.random()*g.length)];this.connect(t,t)}break;case l.SUB_SELF_CONN:if(0===this.selfconns.length){c.warnings&&console.warn("No more self-connections to remove!");break}var w=this.selfconns[Math.floor(Math.random()*this.selfconns.length)];this.disconnect(w.from,w.to);break;case l.ADD_GATE:{var O=this.connections.concat(this.selfconns);for(g=[],e=0;e<O.length;e++){let t=O[e];null===t.gater&&g.push(t)}if(0===g.length){c.warnings&&console.warn("No more connections to gate!");break}f=Math.floor(Math.random()*(this.nodes.length-this.input)+this.input);const t=this.nodes[f];w=g[Math.floor(Math.random()*g.length)],this.gate(t,w)}break;case l.SUB_GATE:if(0===this.gates.length){c.warnings&&console.warn("No more connections to ungate!");break}f=Math.floor(Math.random()*this.gates.length);var A=this.gates[f];this.ungate(A);break;case l.ADD_BACK_CONN:for(d=[],e=this.input;e<this.nodes.length;e++){let t=this.nodes[e];for(n=this.input;n<e;n++){let e=this.nodes[n];t.isProjectingTo(e)||d.push([t,e])}}if(0===d.length){c.warnings&&console.warn("No more connections to be made!");break}p=d[Math.floor(Math.random()*d.length)],this.connect(p[0],p[1]);break;case l.SUB_BACK_CONN:for(g=[],e=0;e<this.connections.length;e++){let t=this.connections[e];t.from.connections.out.length>1&&t.to.connections.in.length>1&&this.nodes.indexOf(t.from)>this.nodes.indexOf(t.to)&&g.push(t)}if(0===g.length){c.warnings&&console.warn("No connections to remove!");break}v=g[Math.floor(Math.random()*g.length)],this.disconnect(v.from,v.to);break;case l.SWAP_NODES:if(t.mutateOutput&&this.nodes.length-this.input<2||!t.mutateOutput&&this.nodes.length-this.input-this.output<2){c.warnings&&console.warn("No nodes that allow swapping of bias and activation function");break}f=Math.floor(Math.random()*(this.nodes.length-(t.mutateOutput?0:this.output)-this.input)+this.input);var N=this.nodes[f];f=Math.floor(Math.random()*(this.nodes.length-(t.mutateOutput?0:this.output)-this.input)+this.input);var T=this.nodes[f],L=N.bias,M=N.squash;N.bias=T.bias,N.squash=T.squash,T.bias=L,T.squash=M}}train(t,e){if(t[0].input.length!==this.input||t[0].output.length!==this.output)throw new Error("Dataset input/output size should be same as network input/output size!");void 0===(e=e||{}).rate&&c.warnings&&console.warn("Using default learning rate, please define a rate!"),void 0===e.iterations&&c.warnings&&console.warn("No target iterations given, running until error is reached!");var n=e.error||.05,o=e.cost||h.default.cost.MSE,i=e.rate||.3,s=e.dropout||0,r=e.momentum||0,a=e.batchSize||1,u=e.ratePolicy||h.default.rate.FIXED(),l=Date.now();if(a>t.length)throw new Error("Batch size must be smaller or equal to dataset length!");if(void 0===e.iterations&&void 0===e.error)throw new Error("At least one of the following options must be specified: error, iterations");void 0===e.error?n=-1:void 0===e.iterations&&(e.iterations=0),this.dropout=s;let f=[],d=[];if(e.crossValidate){let n=Math.ceil((1-e.crossValidate.testSize)*t.length);f=t.slice(0,n),d=t.slice(n)}for(var p=i,g=0,v=1;v>n&&(0===e.iterations||g<e.iterations)&&!(e.crossValidate&&v<=e.crossValidate.testError);){if(p=u(i,++g),e.crossValidate?(this._trainSet(f,a,p,r,o),e.clear&&this.clear(),v=this.test(d,o).error,e.clear&&this.clear()):(v=this._trainSet(t,a,p,r,o),e.clear&&this.clear()),e.shuffle)for(let e,n,o=t.length;o;e=Math.floor(Math.random()*o),n=t[--o],t[o]=t[e],t[e]=n);e.log&&g%e.log==0&&console.log("iteration",g,"error",v,"rate",p),e.schedule&&g%e.schedule.iterations==0&&e.schedule.function({error:v,iteration:g})}if(e.clear&&this.clear(),s)for(let t=0;t<this.nodes.length;t++)"hidden"!==this.nodes[t].type&&"constant"!==this.nodes[t].type||(this.nodes[t].mask=1-this.dropout);return{error:v,iterations:g,time:Date.now()-l}}_trainSet(t,e,n,o,i){for(var s=0,r=0;r<t.length;r++){var a=t[r].input,h=t[r].output,c=!((r+1)%e!=0&&r+1!==t.length),u=this.activate(a,!0);this.propagate(n,o,c,h),s+=i(h,u)}return s/t.length}test(t,e=h.default.cost.MSE){var n;if(this.dropout)for(n=0;n<this.nodes.length;n++)"hidden"!==this.nodes[n].type&&"constant"!==this.nodes[n].type||(this.nodes[n].mask=1-this.dropout);var o=0,i=Date.now();for(n=0;n<t.length;n++){let i=t[n].input;o+=e(t[n].output,this.noTraceActivate(i))}return{error:o/=t.length,time:Date.now()-i}}graph(t,e){var n,o=0,i=0,s={nodes:[],links:[],constraints:[{type:"alignment",axis:"x",offsets:[]},{type:"alignment",axis:"y",offsets:[]}]};for(n=0;n<this.nodes.length;n++){var r=this.nodes[n];"input"===r.type?(1===this.input?s.constraints[0].offsets.push({node:n,offset:0}):s.constraints[0].offsets.push({node:n,offset:.8*t/(this.input-1)*o++}),s.constraints[1].offsets.push({node:n,offset:0})):"output"===r.type&&(1===this.output?s.constraints[0].offsets.push({node:n,offset:0}):s.constraints[0].offsets.push({node:n,offset:.8*t/(this.output-1)*i++}),s.constraints[1].offsets.push({node:n,offset:-.8*e})),s.nodes.push({id:n,name:"hidden"===r.type?r.squash.name:r.type.toUpperCase(),activation:r.activation,bias:r.bias})}var a=this.connections.concat(this.selfconns);for(n=0;n<a.length;n++){var h=a[n];if(null==h.gater)s.links.push({source:this.nodes.indexOf(h.from),target:this.nodes.indexOf(h.to),weight:h.weight});else{var c=s.nodes.length;s.nodes.push({id:c,activation:h.gater.activation,name:"GATE"}),s.links.push({source:this.nodes.indexOf(h.from),target:c,weight:.5*h.weight}),s.links.push({source:c,target:this.nodes.indexOf(h.to),weight:.5*h.weight}),s.links.push({source:this.nodes.indexOf(h.gater),target:c,weight:h.gater.activation,gate:!0})}}return s}toJSON(){var t={nodes:[],connections:[],input:this.input,output:this.output,dropout:this.dropout};for(let t=0;t<this.nodes.length;t++)this.nodes[t].index=t;for(let e=0;e<this.nodes.length;e++){let n=this.nodes[e],o=n.toJSON();if(o.index=e,t.nodes.push(o),0!==n.connections.self.weight){let o=n.connections.self.toJSON();o.from=e,o.to=e,o.gater=null!=n.connections.self.gater?n.connections.self.gater.index:null,t.connections.push(o)}}for(let e=0;e<this.connections.length;e++){let n=this.connections[e],o=n.toJSON();o.from=n.from.index,o.to=n.to.index,o.gater=null!=n.gater?n.gater.index:null,t.connections.push(o)}return t}set(t){for(var e=0;e<this.nodes.length;e++)this.nodes[e].bias=t.bias||this.nodes[e].bias,this.nodes[e].squash=t.squash||this.nodes[e].squash}evolve(t,e){return o(this,void 0,void 0,(function*(){if(t[0].input.length!==this.input||t[0].output.length!==this.output)throw new Error("Dataset input/output size should be same as network input/output size!");var o=void 0!==(e=e||{}).error?e.error:.05,i=void 0!==e.growth?e.growth:1e-4,s=e.cost||h.default.cost.MSE,r=e.amount||1,c=e.threads;void 0===c&&(c="undefined"==typeof window?n(366).cpus().length:navigator.hardwareConcurrency);var l,f=Date.now();if(void 0===e.iterations&&void 0===e.error)throw new Error("At least one of the following options must be specified: error, iterations");if(void 0===e.error?o=-1:void 0===e.iterations&&(e.iterations=0),1===c)l=function(e){for(var n=0,o=0;o<r;o++)n-=e.test(t,s).error;return n-=(e.nodes.length-e.input-e.output+e.connections.length+e.gates.length)*i,(n=isNaN(n)?-1/0:n)/r};else{var d=a.serializeDataSet(t),p=[];if("undefined"==typeof window)for(var g=0;g<c;g++)p.push(new a.workers.node.TestWorker(d,s));else for(g=0;g<c;g++)p.push(new a.workers.browser.TestWorker(d,s));l=function(t){return new Promise(((e,n)=>{for(var o=t.slice(),s=0,r=function(t){if(o.length){var n=o.shift();t.evaluate(n).then((function(e){n.score=-e,n.score-=(n.nodes.length-n.input-n.output+n.connections.length+n.gates.length)*i,n.score=isNaN(parseFloat(e))?-1/0:n.score,r(t)}))}else++s===c&&e(void 0)},a=0;a<p.length;a++)r(p[a])}))},e.fitnessPopulation=!0}e.network=this;for(var v,m=new u(this.input,this.output,l,e),_=-1/0,w=-1/0;_<-o&&(0===e.iterations||m.generation<e.iterations);){let t=yield m.evolve(),n=t.score;_=n+(t.nodes.length-t.input-t.output+t.connections.length+t.gates.length)*i,n>w&&(w=n,v=t),e.log&&m.generation%e.log==0&&console.log("iteration",m.generation,"fitness",n,"error",-_),e.schedule&&m.generation%e.schedule.iterations==0&&e.schedule.function({fitness:n,error:-_,iteration:m.generation})}if(c>1)for(g=0;g<p.length;g++)p[g].terminate();return void 0!==v&&(this.nodes=v.nodes,this.connections=v.connections,this.selfconns=v.selfconns,this.gates=v.gates,e.clear&&this.clear()),{error:-_,iterations:m.generation,time:Date.now()-f}}))}standalone(){var t,e=[],n=[],o=[],i=[],s=[];for(t=0;t<this.input;t++){var r=this.nodes[t];n.push(r.activation),o.push(r.state)}for(i.push("for(var i = 0; i < input.length; i++) A[i] = input[i];"),t=0;t<this.nodes.length;t++)this.nodes[t].index=t;for(t=this.input;t<this.nodes.length;t++){let r=this.nodes[t];n.push(r.activation),o.push(r.state);var a=e.indexOf(r.squash.name);-1===a&&(a=e.length,e.push(r.squash.name),s.push(r.squash.toString()));for(var h=[],c=0;c<r.connections.in.length;c++){var u=r.connections.in[c],l=`A[${u.from.index}] * ${u.weight}`;null!=u.gater&&(l+=` * A[${u.gater.index}]`),h.push(l)}if(r.connections.self.weight){let e=r.connections.self,n=`S[${t}] * ${e.weight}`;null!=e.gater&&(n+=` * A[${e.gater.index}]`),h.push(n)}var f=`S[${t}] = ${h.join(" + ")} + ${r.bias};`,d=`A[${t}] = F[${a}](S[${t}])${r.mask?"":" * "+r.mask};`;i.push(f),i.push(d)}var p=[];for(t=this.nodes.length-this.output;t<this.nodes.length;t++)p.push(`A[${t}]`);i.push(`return [${p.join(",")}];`);var g="";return g+=`var F = [${s.toString()}];\r\n`,g+=`var A = [${n.toString()}];\r\n`,(g+=`var S = [${o.toString()}];\r\n`)+`function activate(input){\r\n${i.join("\r\n")}\r\n}`}serialize(){var t,e=[],n=[],o=[],i=["LOGISTIC","TANH","IDENTITY","STEP","RELU","SOFTSIGN","SINUSOID","GAUSSIAN","BENT_IDENTITY","BIPOLAR","BIPOLAR_SIGMOID","HARD_TANH","ABSOLUTE","INVERSE","SELU"];for(o.push(this.input),o.push(this.output),t=0;t<this.nodes.length;t++){let o=this.nodes[t];o.index=t,e.push(o.activation),n.push(o.state)}for(t=this.input;t<this.nodes.length;t++){let e=this.nodes[t];o.push(e.index),o.push(e.bias),o.push(i.indexOf(e.squash.name)),o.push(e.connections.self.weight),o.push(null==e.connections.self.gater?-1:e.connections.self.gater.index);for(var s=0;s<e.connections.in.length;s++){let t=e.connections.in[s];o.push(t.from.index),o.push(t.weight),o.push(null==t.gater?-1:t.gater.index)}o.push(-2)}return[e,n,o]}static fromJSON(t){var e,n=new f(t.input,t.output);for(n.dropout=t.dropout,n.nodes=[],n.connections=[],e=0;e<t.nodes.length;e++)n.nodes.push(r.default.fromJSON(t.nodes[e]));for(e=0;e<t.connections.length;e++){var o=t.connections[e],i=n.connect(n.nodes[o.from],n.nodes[o.to])[0];i.weight=o.weight,null!=o.gater&&n.gate(n.nodes[o.gater],i)}return n}static merge(t,e){if(t=f.fromJSON(t.toJSON()),e=f.fromJSON(e.toJSON()),t.output!==e.input)throw new Error("Output size of network1 should be the same as the input size of network2!");var n;for(n=0;n<e.connections.length;n++){let o=e.connections[n];if("input"===o.from.type){let n=e.nodes.indexOf(o.from);o.from=t.nodes[t.nodes.length-1-n]}}for(n=e.input-1;n>=0;n--)e.nodes.splice(n,1);for(n=t.nodes.length-t.output;n<t.nodes.length;n++)t.nodes[n].type="hidden";return t.connections=t.connections.concat(e.connections),t.nodes=t.nodes.concat(e.nodes),t}static crossOver(t,e,n){if(t.input!==e.input||t.output!==e.output)throw new Error("Networks don't have the same input/output size!");var o=new f(t.input,t.output);o.connections=[],o.nodes=[];var i,a=t.score||0,h=e.score||0;if(n||a===h){let n=Math.max(t.nodes.length,e.nodes.length),o=Math.min(t.nodes.length,e.nodes.length);i=Math.floor(Math.random()*(n-o+1)+o)}else i=a>h?t.nodes.length:e.nodes.length;var c,u=t.output;for(c=0;c<t.nodes.length;c++)t.nodes[c].index=c;for(c=0;c<e.nodes.length;c++)e.nodes[c].index=c;for(c=0;c<i;c++){var l;if(c<i-u){let n=Math.random();l=n>=.5?t.nodes[c]:e.nodes[c];let o=n<.5?t.nodes[c]:e.nodes[c];void 0!==l&&"output"!==l.type||(l=o)}else l=Math.random()>=.5?t.nodes[t.nodes.length+c-i]:e.nodes[e.nodes.length+c-i];var d=new r.default;d.bias=l.bias,d.squash=l.squash,d.type=l.type,o.nodes.push(d)}var p={},g={};for(c=0;c<t.connections.length;c++){let e=t.connections[c],n={weight:e.weight,from:e.from.index,to:e.to.index,gater:null!=e.gater?e.gater.index:-1};p[s.default.innovationID(n.from,n.to)]=n}for(c=0;c<t.selfconns.length;c++){let e=t.selfconns[c],n={weight:e.weight,from:e.from.index,to:e.to.index,gater:null!=e.gater?e.gater.index:-1};p[s.default.innovationID(n.from,n.to)]=n}for(c=0;c<e.connections.length;c++){let t=e.connections[c],n={weight:t.weight,from:t.from.index,to:t.to.index,gater:null!=t.gater?t.gater.index:-1};g[s.default.innovationID(n.from,n.to)]=n}for(c=0;c<e.selfconns.length;c++){let t=e.selfconns[c],n={weight:t.weight,from:t.from.index,to:t.to.index,gater:null!=t.gater?t.gater.index:-1};g[s.default.innovationID(n.from,n.to)]=n}var v=[],m=Object.keys(p),_=Object.keys(g);for(c=m.length-1;c>=0;c--)if(void 0!==g[m[c]]){let t=Math.random()>=.5?p[m[c]]:g[m[c]];v.push(t),g[m[c]]=void 0}else(a>=h||n)&&v.push(p[m[c]]);if(h>=a||n)for(c=0;c<_.length;c++)void 0!==g[_[c]]&&v.push(g[_[c]]);for(c=0;c<v.length;c++){let t=v[c];if(t.to<i&&t.from<i){let e=o.nodes[t.from],n=o.nodes[t.to],s=o.connect(e,n)[0];s.weight=t.weight,-1!==t.gater&&t.gater<i&&o.gate(o.nodes[t.gater],s)}}return o}}e.default=f},814:function(t,e,n){"use strict";var o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const i=o(n(502));var s=n(621),r=n(982);class a{constructor(t){this.activation=0,this.derivative=0,this.state=0,this.old=0,this.mask=1,this.previousDeltaBias=0,this.totalDeltaBias=0,this.error={responsibility:0,projected:0,gated:0},this.bias="input"===t?0:.2*Math.random()-.1,this.squash=s.activation.LOGISTIC,this.type=t||"hidden",this.connections={in:[],out:[],gated:[],self:new i.default(this,this,0)}}activate(t){if(void 0!==t)return this.activation=t,this.activation;this.old=this.state,this.state=this.connections.self.gain*this.connections.self.weight*this.state+this.bias;for(let t=0;t<this.connections.in.length;t++){var e=this.connections.in[t];this.state+=e.from.activation*e.weight*e.gain}this.activation=this.squash(this.state)*this.mask,this.derivative=this.squash(this.state,!0);var n=[],o=[];for(let t=0;t<this.connections.gated.length;t++){let e=this.connections.gated[t],i=e.to,s=n.indexOf(i);s>-1?o[s]+=e.weight*e.from.activation:(n.push(i),o.push(e.weight*e.from.activation+(i.connections.self.gater===this?i.old:0))),e.gain=this.activation}for(let t=0;t<this.connections.in.length;t++){let e=this.connections.in[t];e.elegibility=this.connections.self.gain*this.connections.self.weight*e.elegibility+e.from.activation*e.gain;for(var i=0;i<n.length;i++){let t=n[i],s=o[i],r=e.xtrace.nodes.indexOf(t);r>-1?e.xtrace.values[r]=t.connections.self.gain*t.connections.self.weight*e.xtrace.values[r]+this.derivative*e.elegibility*s:(e.xtrace.nodes.push(t),e.xtrace.values.push(this.derivative*e.elegibility*s))}}return this.activation}noTraceActivate(t){if(void 0!==t)return this.activation=t,this.activation;var e;for(this.state=this.connections.self.gain*this.connections.self.weight*this.state+this.bias,e=0;e<this.connections.in.length;e++){var n=this.connections.in[e];this.state+=n.from.activation*n.weight*n.gain}for(this.activation=this.squash(this.state),e=0;e<this.connections.gated.length;e++)this.connections.gated[e].gain=this.activation;return this.activation}propagate(t=.3,e=0,n,o){let i=0;if("output"===this.type)this.error.responsibility=this.error.projected=(o||0)-this.activation;else{for(let t=0;t<this.connections.out.length;t++){let e=this.connections.out[t];i+=e.to.error.responsibility*e.weight*e.gain}this.error.projected=this.derivative*i,i=0;for(let t=0;t<this.connections.gated.length;t++){let e=this.connections.gated[t],n=e.to,o=n.connections.self.gater===this?n.old:0;o+=e.weight*e.from.activation,i+=n.error.responsibility*o}this.error.gated=this.derivative*i,this.error.responsibility=this.error.projected+this.error.gated}if("constant"===this.type)return;for(let o=0;o<this.connections.in.length;o++){let i=this.connections.in[o],r=this.error.projected*i.elegibility;for(var s=0;s<i.xtrace.nodes.length;s++){let t=i.xtrace.nodes[s],e=i.xtrace.values[s];r+=t.error.responsibility*e}let a=t*r*this.mask;i.totalDeltaWeight+=a,n&&(i.totalDeltaWeight+=e*i.previousDeltaWeight,i.weight+=i.totalDeltaWeight,i.previousDeltaWeight=i.totalDeltaWeight,i.totalDeltaWeight=0)}const r=t*this.error.responsibility;this.totalDeltaBias+=r,n&&(this.totalDeltaBias+=e*this.previousDeltaBias,this.bias+=this.totalDeltaBias,this.previousDeltaBias=this.totalDeltaBias,this.totalDeltaBias=0)}connect(t,e){const n=[];if(void 0!==t.bias)if(t===this)0!==this.connections.self.weight?r.warnings&&console.warn("This connection already exists!"):this.connections.self.weight=e||1,n.push(this.connections.self);else{if(this.isProjectingTo(t))throw new Error("Already projecting a connection to this node!");{let o=new i.default(this,t,e);t.connections.in.push(o),this.connections.out.push(o),n.push(o)}}else for(var o=0;o<t.nodes.length;o++){let s=new i.default(this,t.nodes[o],e);t.nodes[o].connections.in.push(s),this.connections.out.push(s),t.connections.in.push(s),n.push(s)}return n}disconnect(t,e){if(this!==t){for(let e=0;e<this.connections.out.length;e++){let n=this.connections.out[e];if(n.to===t){this.connections.out.splice(e,1);let t=n.to.connections.in.indexOf(n);n.to.connections.in.splice(t,1),null!==n.gater&&n.gater.ungate(n);break}}e&&t.disconnect(this)}else this.connections.self.weight=0}gate(t){Array.isArray(t)||(t=[t]);for(let e=0;e<t.length;e++){let n=t[e];this.connections.gated.push(n),n.gater=this}}ungate(t){Array.isArray(t)||(t=[t]);for(var e=t.length-1;e>=0;e--){var n=t[e],o=this.connections.gated.indexOf(n);this.connections.gated.splice(o,1),n.gater=null,n.gain=1}}clear(){for(var t=0;t<this.connections.in.length;t++){var e=this.connections.in[t];e.elegibility=0,e.xtrace={nodes:[],values:[]}}for(t=0;t<this.connections.gated.length;t++)this.connections.gated[t].gain=0;this.error.responsibility=this.error.projected=this.error.gated=0,this.old=this.state=this.activation=0}mutate(t){if(void 0===t)throw new Error("No mutate method given!");if(!(t.name in s.mutation))throw new Error("This method does not exist!");switch(t){case s.mutation.MOD_ACTIVATION:let e=t.allowed[(t.allowed.indexOf(this.squash)+Math.floor(Math.random()*(t.allowed.length-1))+1)%t.allowed.length];this.squash=e;break;case s.mutation.MOD_BIAS:let n=Math.random()*(t.max-t.min)+t.min;this.bias+=n}}isProjectingTo(t){if(t===this&&0!==this.connections.self.weight)return!0;for(var e=0;e<this.connections.out.length;e++)if(this.connections.out[e].to===t)return!0;return!1}isProjectedBy(t){if(t===this&&0!==this.connections.self.weight)return!0;for(var e=0;e<this.connections.in.length;e++)if(this.connections.in[e].from===t)return!0;return!1}toJSON(){return{bias:this.bias,type:this.type,squash:this.squash.name,mask:this.mask}}static fromJSON(t){var e=new a;return e.bias=t.bias,e.type=t.type,e.mask=t.mask,e.squash=s.activation[t.squash],e}}e.default=a},982:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={warnings:!1}},498:function(t,e,n){"use strict";var o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const i=o(n(621)),s=o(n(502)),r=o(n(351)),a=o(n(398)),h=o(n(982)),c=o(n(583)),u=o(n(369)),l=o(n(814)),f=o(n(256)),d={methods:i.default,Connection:s.default,architect:r.default,Network:a.default,config:h.default,Group:c.default,Layer:u.default,NodeElement:l.default,Neat:f.default,multi:n(269)};e.default=d},203:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n={LOGISTIC:(t,e)=>{const n=1/(1+Math.exp(-t));return e?n*(1-n):n},TANH:function(t,e){return e?1-Math.pow(Math.tanh(t),2):Math.tanh(t)},IDENTITY:function(t,e){return e?1:t},STEP:function(t,e){return e?0:t>0?1:0},RELU:function(t,e){return e?t>0?1:0:t>0?t:0},SOFTSIGN:function(t,e){const n=1+Math.abs(t);return e?t/Math.pow(n,2):t/n},SINUSOID:function(t,e){return e?Math.cos(t):Math.sin(t)},GAUSSIAN:function(t,e){const n=Math.exp(-Math.pow(t,2));return e?-2*t*n:n},BENT_IDENTITY:function(t,e){const n=Math.sqrt(Math.pow(t,2)+1);return e?t/(2*n)+1:(n-1)/2+t},BIPOLAR:function(t,e){return e?0:t>0?1:-1},BIPOLAR_SIGMOID:function(t,e){const n=2/(1+Math.exp(-t))-1;return e?.5*(1+n)*(1-n):n},HARD_TANH:function(t,e){return e?t>-1&&t<1?1:0:Math.max(-1,Math.min(1,t))},ABSOLUTE:function(t,e){return e?t<0?-1:1:Math.abs(t)},INVERSE:function(t,e){return e?-1:1-t},SELU:function(t,e){const n=1.6732632423543772,o=1.0507009873554805,i=t>0?t:n*Math.exp(t)-n;return e?t>0?o:(i+n)*o:i*o}};e.default=n},847:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={ALL_TO_ALL:{name:"OUTPUT"},ALL_TO_ELSE:{name:"INPUT"},ONE_TO_ONE:{name:"SELF"}}},634:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n={CROSS_ENTROPY:function(t,e){let n=0;for(let o=0;o<e.length;o++)n-=t[o]*Math.log(Math.max(e[o],1e-15))+(1-t[o])*Math.log(1-Math.max(e[o],1e-15));return n/e.length},MSE:function(t,e){let n=0;for(let o=0;o<e.length;o++)n+=Math.pow(t[o]-e[o],2);return n/e.length},BINARY:function(t,e){let n=0;for(let o=0;o<e.length;o++)n+=Number(Math.round(2*t[o])!==Math.round(2*e[o]));return n},MAE:function(t,e){for(var n=0,o=0;o<e.length;o++)n+=Math.abs(t[o]-e[o]);return n/e.length},MAPE:function(t,e){for(var n=0,o=0;o<e.length;o++)n+=Math.abs((e[o]-t[o])/Math.max(t[o],1e-15));return n/e.length},MSLE:function(t,e){for(var n=0,o=0;o<e.length;o++)n+=Math.log(Math.max(t[o],1e-15))-Math.log(Math.max(e[o],1e-15));return n},HINGE:function(t,e){for(var n=0,o=0;o<e.length;o++)n+=Math.max(0,1-t[o]*e[o]);return n}};e.default=n},121:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={SINGLE_POINT:{name:"SINGLE_POINT",config:[.4]},TWO_POINT:{name:"TWO_POINT",config:[.4,.9]},UNIFORM:{name:"UNIFORM"},AVERAGE:{name:"AVERAGE"}}},423:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={OUTPUT:{name:"OUTPUT"},INPUT:{name:"INPUT"},SELF:{name:"SELF"}}},621:function(t,e,n){"use strict";var o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const i=o(n(203)),s=o(n(128)),r=o(n(829)),a=o(n(121)),h=o(n(634)),c=o(n(423)),u=o(n(847)),l=o(n(569));e.default={activation:i.default,mutation:s.default,selection:r.default,crossover:a.default,cost:h.default,gating:c.default,connection:u.default,rate:l.default}},128:function(t,e,n){"use strict";var o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const i=o(n(203));var s={ADD_NODE:{name:"ADD_NODE"},SUB_NODE:{name:"SUB_NODE",keep_gates:!0},ADD_CONN:{name:"ADD_CONN"},SUB_CONN:{name:"REMOVE_CONN"},MOD_WEIGHT:{name:"MOD_WEIGHT",min:-1,max:1},MOD_BIAS:{name:"MOD_BIAS",min:-1,max:1},MOD_ACTIVATION:{name:"MOD_ACTIVATION",mutateOutput:!0,allowed:[i.default.LOGISTIC,i.default.TANH,i.default.RELU,i.default.IDENTITY,i.default.STEP,i.default.SOFTSIGN,i.default.SINUSOID,i.default.GAUSSIAN,i.default.BENT_IDENTITY,i.default.BIPOLAR,i.default.BIPOLAR_SIGMOID,i.default.HARD_TANH,i.default.ABSOLUTE,i.default.INVERSE,i.default.SELU]},ADD_SELF_CONN:{name:"ADD_SELF_CONN"},SUB_SELF_CONN:{name:"SUB_SELF_CONN"},ADD_GATE:{name:"ADD_GATE"},SUB_GATE:{name:"SUB_GATE"},ADD_BACK_CONN:{name:"ADD_BACK_CONN"},SUB_BACK_CONN:{name:"SUB_BACK_CONN"},SWAP_NODES:{name:"SWAP_NODES",mutateOutput:!0}};s.ALL=[s.ADD_NODE,s.SUB_NODE,s.ADD_CONN,s.SUB_CONN,s.MOD_WEIGHT,s.MOD_BIAS,s.MOD_ACTIVATION,s.ADD_GATE,s.SUB_GATE,s.ADD_SELF_CONN,s.SUB_SELF_CONN,s.ADD_BACK_CONN,s.SUB_BACK_CONN,s.SWAP_NODES],s.FFW=[s.ADD_NODE,s.SUB_NODE,s.ADD_CONN,s.SUB_CONN,s.MOD_WEIGHT,s.MOD_BIAS,s.MOD_ACTIVATION,s.SWAP_NODES],e.default=s},569:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n={FIXED:()=>function(t,e){return t},STEP:(t=.9,e=100)=>(n,o)=>n*Math.pow(t,Math.floor(o/e)),EXP:(t=.999)=>(e,n)=>e*Math.pow(t,n),INV:(t=.001,e=2)=>function(n,o){return n*Math.pow(1+t*o,-e)}};e.default=n},829:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={FITNESS_PROPORTIONATE:{name:"FITNESS_PROPORTIONATE"},POWER:{name:"POWER",power:4},TOURNAMENT:{name:"TOURNAMENT",size:5,probability:.5}}},256:function(t,e,n){"use strict";var o=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(i,s){function r(t){try{h(o.next(t))}catch(t){s(t)}}function a(t){try{h(o.throw(t))}catch(t){s(t)}}function h(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,a)}h((o=o.apply(t,e||[])).next())}))},i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const s=i(n(398)),r=i(n(621)),a=i(n(982));var h=r.default.selection;e.default=class{constructor(t,e,n,o){this.population=[],this.input=t,this.output=e,this.fitness=n,o=o||{},this.equal=o.equal||!1,this.clear=o.clear||!1,this.popsize=o.popsize||50,this.elitism=o.elitism||0,this.provenance=o.provenance||0,this.mutationRate=o.mutationRate||.3,this.mutationAmount=o.mutationAmount||1,this.fitnessPopulation=o.fitnessPopulation||!1,this.selection=o.selection||r.default.selection.POWER,this.crossover=o.crossover||[r.default.crossover.SINGLE_POINT,r.default.crossover.TWO_POINT,r.default.crossover.UNIFORM,r.default.crossover.AVERAGE],this.mutation=o.mutation||r.default.mutation.FFW,this.template=o.network||!1,this.maxNodes=o.maxNodes||1/0,this.maxConns=o.maxConns||1/0,this.maxGates=o.maxGates||1/0,this.selectMutationMethod="function"==typeof o.mutationSelection?o.mutationSelection.bind(this):this.selectMutationMethod,this.generation=0,this.createPool(this.template)}createPool(t){this.population=[];for(var e=0;e<this.popsize;e++){var n;(n=this.template?s.default.fromJSON(t.toJSON()):new s.default(this.input,this.output)).score=void 0,this.population.push(n)}}evolve(){return o(this,void 0,void 0,(function*(){void 0===this.population[this.population.length-1].score&&(yield this.evaluate()),this.sort();var t=s.default.fromJSON(this.population[0].toJSON());t.score=this.population[0].score;for(var e=[],n=[],o=0;o<this.elitism;o++)n.push(this.population[o]);for(o=0;o<this.provenance;o++)e.push(s.default.fromJSON(this.template.toJSON()));for(o=0;o<this.popsize-this.elitism-this.provenance;o++)e.push(this.getOffspring());for(this.population=e,this.mutate(),this.population.push(...n),o=0;o<this.population.length;o++)this.population[o].score=void 0;return this.generation++,t}))}getOffspring(){var t=this.getParent(),e=this.getParent();return s.default.crossOver(t,e,this.equal)}selectMutationMethod(t){var e=this.mutation[Math.floor(Math.random()*this.mutation.length)];if(e===r.default.mutation.ADD_NODE&&t.nodes.length>=this.maxNodes)a.default.warnings&&console.warn("maxNodes exceeded!");else if(e===r.default.mutation.ADD_CONN&&t.connections.length>=this.maxConns)a.default.warnings&&console.warn("maxConns exceeded!");else{if(!(e===r.default.mutation.ADD_GATE&&t.gates.length>=this.maxGates))return e;a.default.warnings&&console.warn("maxGates exceeded!")}}mutate(){for(var t=0;t<this.population.length;t++)if(Math.random()<=this.mutationRate)for(var e=0;e<this.mutationAmount;e++){var n=this.selectMutationMethod(this.population[t]);this.population[t].mutate(n)}}evaluate(){return o(this,void 0,void 0,(function*(){var t;if(this.fitnessPopulation){if(this.clear)for(t=0;t<this.population.length;t++)this.population[t].clear();yield this.fitness(this.population)}else for(t=0;t<this.population.length;t++){var e=this.population[t];this.clear&&e.clear(),e.score=yield this.fitness(e)}}))}sort(){this.population.sort((function(t,e){return e.score-t.score}))}getFittest(){return void 0===this.population[this.population.length-1].score&&this.evaluate(),this.population[0].score<this.population[1].score&&this.sort(),this.population[0]}getAverage(){void 0===this.population[this.population.length-1].score&&this.evaluate();for(var t=0,e=0;e<this.population.length;e++)t+=this.population[e].score;return t/this.population.length}getParent(){var t;switch(this.selection){case h.POWER:this.population[0].score<this.population[1].score&&this.sort();var e=Math.floor(Math.pow(Math.random(),this.selection.power)*this.population.length);return this.population[e];case h.FITNESS_PROPORTIONATE:var n=0,o=0;for(t=0;t<this.population.length;t++){var i=this.population[t].score;o=i<o?i:o,n+=i}n+=(o=Math.abs(o))*this.population.length;var s=Math.random()*n,r=0;for(t=0;t<this.population.length;t++){let e=this.population[t];if(s<(r+=e.score+o))return e}return this.population[Math.floor(Math.random()*this.population.length)];case h.TOURNAMENT:if(this.selection.size>this.popsize)throw new Error("Your tournament size should be lower than the population size, please change methods.selection.TOURNAMENT.size");var a=[];for(t=0;t<this.selection.size;t++){let t=this.population[Math.floor(Math.random()*this.population.length)];a.push(t)}for(a.sort((function(t,e){return e.score-t.score})),t=0;t<this.selection.size;t++)if(Math.random()<this.selection.probability||t===this.selection.size-1)return a[t]}}export(){for(var t=[],e=0;e<this.population.length;e++){var n=this.population[e];t.push(n.toJSON())}return t}import(t){for(var e=[],n=0;n<t.length;n++){var o=t[n];e.push(s.default.fromJSON(o))}this.population=e,this.popsize=e.length}}},269:(t,e,n)=>{var o={workers:n(732),serializeDataSet:function(t){for(var e=[t[0].input.length,t[0].output.length],n=0;n<t.length;n++){var o;for(o=0;o<e[0];o++)e.push(t[n].input[o]);for(o=0;o<e[1];o++)e.push(t[n].output[o])}return e},activateSerializedNetwork:function(t,e,n,o,i){for(var s=0;s<o[0];s++)e[s]=t[s];for(s=2;s<o.length;s++){let t=o[s++],r=o[s++],a=o[s++],h=o[s++],c=o[s++];for(n[t]=(-1===c?1:e[c])*h*n[t]+r;-2!==o[s];)n[t]+=e[o[s++]]*o[s++]*(-1===o[s++]?1:e[o[s-1]]);e[t]=i[a](n[t])}var r=[];for(s=e.length-o[1];s<e.length;s++)r.push(e[s]);return r},deserializeDataSet:function(t){for(var e=[],n=t[0]+t[1],o=0;o<(t.length-2)/n;o++){let s=[];for(var i=2+o*n;i<2+o*n+t[0];i++)s.push(t[i]);let r=[];for(i=2+o*n+t[0];i<2+o*n+n;i++)r.push(t[i]);e.push(s),e.push(r)}return e},activations:[function(t){return 1/(1+Math.exp(-t))},function(t){return Math.tanh(t)},function(t){return t},function(t){return t>0?1:0},function(t){return t>0?t:0},function(t){return t/(1+Math.abs(t))},function(t){return Math.sin(t)},function(t){return Math.exp(-Math.pow(t,2))},function(t){return(Math.sqrt(Math.pow(t,2)+1)-1)/2+t},function(t){return t>0?1:-1},function(t){return 2/(1+Math.exp(-t))-1},function(t){return Math.max(-1,Math.min(1,t))},function(t){return Math.abs(t)},function(t){return 1-t},function(t){var e=1.6732632423543772;return 1.0507009873554805*(t>0?t:e*Math.exp(t)-e)}],testSerializedSet:function(t,e,n,i,s,r){for(var a=0,h=0;h<t.length;h+=2){let c=o.activateSerializedNetwork(t[h],n,i,s,r);a+=e(t[h+1],c)}return a/(t.length/2)}};for(var i in o)t.exports[i]=o[i]},953:(t,e,n)=>{t.exports=i;var o=n(269);function i(t,e){var n=new Blob([this._createBlobString(e)]);this.url=window.URL.createObjectURL(n),this.worker=new Worker(this.url);var o={set:new Float64Array(t).buffer};this.worker.postMessage(o,[o.set])}i.prototype={evaluate:function(t){return new Promise(((e,n)=>{var o=t.serialize(),i={activations:new Float64Array(o[0]).buffer,states:new Float64Array(o[1]).buffer,conns:new Float64Array(o[2]).buffer};this.worker.onmessage=function(t){var n=new Float64Array(t.data.buffer)[0];e(n)},this.worker.postMessage(i,[i.activations,i.states,i.conns])}))},terminate:function(){this.worker.terminate(),window.URL.revokeObjectURL(this.url)},_createBlobString:function(t){return`\n      var F = [${o.activations.toString()}];\n      var cost = ${t.toString()};\n      var multi = {\n        deserializeDataSet: ${o.deserializeDataSet.toString()},\n        testSerializedSet: ${o.testSerializedSet.toString()},\n        activateSerializedNetwork: ${o.activateSerializedNetwork.toString()}\n      };\n\n      this.onmessage = function (e) {\n        if(typeof e.data.set === 'undefined'){\n          var A = new Float64Array(e.data.activations);\n          var S = new Float64Array(e.data.states);\n          var data = new Float64Array(e.data.conns);\n\n          var error = multi.testSerializedSet(set, cost, A, S, data, F);\n\n          var answer = { buffer: new Float64Array([error ]).buffer };\n          postMessage(answer, [answer.buffer]);\n        } else {\n          set = multi.deserializeDataSet(new Float64Array(e.data.set));\n        }\n      };`}}},731:(t,e,n)=>{t.exports=s;var o=n(200),i=n(975);function s(t,e){this.worker=o.fork(i.join(__dirname,"/worker")),this.worker.send({set:t,cost:e.name})}s.prototype={evaluate:function(t){return new Promise(((e,n)=>{var o=t.serialize(),i={activations:o[0],states:o[1],conns:o[2]},s=this.worker;this.worker.on("message",(function t(n){s.removeListener("message",t),e(n)})),this.worker.send(i)}))},terminate:function(){this.worker.kill()}}},732:(t,e,n)=>{var o={node:{TestWorker:n(731)},browser:{TestWorker:n(953)}};t.exports=o},200:t=>{"use strict";t.exports=require("child_process")},366:t=>{"use strict";t.exports=require("os")}},e={},n=function n(o){var i=e[o];if(void 0!==i)return i.exports;var s=e[o]={exports:{}};return t[o].call(s.exports,s,s.exports,n),s.exports}(498);exports.MasterNeat=n})();